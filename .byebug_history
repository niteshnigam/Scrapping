exit
result
names
obj
exit
obj
img
exit
img = profileImg[0].attributes["src"].value
profileImg[0]
tempLinks
img = profileImg[0].attributes["src"]
profileImg
exit
profile_url
profile_unparsed_page
div = profile_parsed_page.css("")
profileDiv
exit
profile_unparsed_page
profile_url
div=profile_parsed_page.css("table.infobox")
exit
profileDIv
img
c
result
c
fin
exit
result
c
exit
result
c
result
c
exit
c
result
c
exit
c
exit
fin
finm
fin
exit
fin
c
fin
c
cc
c
tempLinks
c
exit
c
exit
temp
c
exit
temp
c
exit
temp
c
exit
c
exit
c
exit
c
exit
c
exit
c
temp
c
temp
c
temp
c
temp
c
temp
c
temp
c
result
exit
result
exit
result
exit
result
exit
namesLink[0].attributes["href"].value
temp
c
arr
arr.actors
arr = temp.to_json
temp[":actors"]
exit
fin
result.count
exit
result.to_s
result[0].to_json.actors
result.last
result.count
exit
result.count
result
exit
result
exit
result
exit
namesLink
exit
allLinks.count
exit
allLinks[0]
exit
link
exit
cc
c
links
fin
links
fin
links
c
links
exit
test << link
test = Array.new
test << link
list << link
link.link
exit
link["link"]
link
exit
fin
link
c
link
c
link
c
link
c
link
c
exit
link
exit
link
exit
nationLinks[0].attributes["href"].value
exit
nationLinks.css('li>a')[0]
exit
nationalList.css('ul')[2]
nationLinks
exit
nationLinks[1].attributes["href"].value
exit
parsed_page
unparsed_page
exit
parsed_page.css('div.div-col')
test.css('ul>li>a')[0].text
parsed_page.css('div.div-col')
test.css('ul>li>a')[0].text
test = parsed_page.css('div.div-col')[2]
test.css('ul>li>a')[0].text
test = parsed_page.css('div.div-col')[1]
parsed_page
nationalList.css('ul>li>a')[0]
nationLinks[1].text
exit
first_job.css('ul>li>a').count
first_job
first_job = parsed_page.css('div.div-col')[1]
continue
cls
reset
clear
parsed_page
unparsed_page
parsed_page
url
